name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pull-requests: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Get version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
      - name: Generate changelog
        id: changelog
        run: |
          # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–µ–≥
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
          
          # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º changelog
          if [ -n "$PREVIOUS_TAG" ]; then
            echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
            echo "## –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ ${{ steps.version.outputs.VERSION }}" >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            
            # –ü–æ–ª—É—á–∞–µ–º –∫–æ–º–º–∏—Ç—ã –º–µ–∂–¥—É —Ç–µ–≥–∞–º–∏ –∏ –≥—Ä—É–ø–ø–∏—Ä—É–µ–º –∏—Ö
            git log --pretty=format:"%s" $PREVIOUS_TAG..HEAD | while read commit; do
              case "$commit" in
                feat*|feature*)
                  echo "### ‚ú® –ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏" >> changelog_temp.md
                  echo "- $commit" >> changelog_temp.md
                  ;;
                fix*)
                  echo "### üêõ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è" >> changelog_temp.md  
                  echo "- $commit" >> changelog_temp.md
                  ;;
                docs*)
                  echo "### üìù –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è" >> changelog_temp.md
                  echo "- $commit" >> changelog_temp.md
                  ;;
                style*|refactor*)
                  echo "### üîß –†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥" >> changelog_temp.md
                  echo "- $commit" >> changelog_temp.md
                  ;;
                perf*)
                  echo "### ‚ö° –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å" >> changelog_temp.md
                  echo "- $commit" >> changelog_temp.md
                  ;;
                test*)
                  echo "### üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ" >> changelog_temp.md
                  echo "- $commit" >> changelog_temp.md
                  ;;
                *)
                  echo "### üì¶ –î—Ä—É–≥–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è" >> changelog_temp.md
                  echo "- $commit" >> changelog_temp.md
                  ;;
              esac
            done
            
            # –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º
            if [ -f changelog_temp.md ]; then
              awk '!seen[$0]++' changelog_temp.md >> $GITHUB_OUTPUT
              rm changelog_temp.md
            else
              echo "- –†–∞–∑–ª–∏—á–Ω—ã–µ —É–ª—É—á—à–µ–Ω–∏—è –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è" >> $GITHUB_OUTPUT
            fi
          else
            echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
            echo "## –ü–µ—Ä–≤—ã–π —Ä–µ–ª–∏–∑ ${{ steps.version.outputs.VERSION }}" >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            echo "### üéâ –ù–∞—á–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è" >> $GITHUB_OUTPUT
            echo "- –ú–æ–¥—É–ª—å –æ–ø–ª–∞—Ç—ã iPay.ua –¥–ª—è OpenCart 3.x" >> $GITHUB_OUTPUT
            echo "- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ API iPay.ua 3.02" >> $GITHUB_OUTPUT
            echo "- –¢–µ—Å—Ç–æ–≤—ã–π –∏ –±–æ–µ–≤–æ–π —Ä–µ–∂–∏–º—ã" >> $GITHUB_OUTPUT
          fi
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Create release archive
        run: |
          # –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤ —Å –º–æ–¥—É–ª–µ–º –¥–ª—è —Ä–µ–ª–∏–∑–∞
          mkdir -p release-build
          
          # –ö–æ–ø–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –º–æ–¥—É–ª—è
          cp -r upload/ release-build/
          cp README.md release-build/
          
          # –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤
          cd release-build
          zip -r ../ipay-opencart-${{ steps.version.outputs.VERSION }}.zip .
          cd ..
          
          # –°–æ–∑–¥–∞–µ–º —Ç–∞–∫–∂–µ tar.gz –∞—Ä—Ö–∏–≤
          tar -czf ipay-opencart-${{ steps.version.outputs.VERSION }}.tar.gz -C release-build .
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.VERSION }}
          name: "iPay OpenCart Module ${{ steps.version.outputs.VERSION }}"
          body: ${{ steps.changelog.outputs.CHANGELOG }}
          files: |
            ipay-opencart-${{ steps.version.outputs.VERSION }}.zip
            ipay-opencart-${{ steps.version.outputs.VERSION }}.tar.gz
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}